package wodanalyzer.logic;

/**
 * Класс, предоставляющий метод для анализа слова.
 */
public class WordAnalyzer {

    /**
     * Анализирует слово: возвращает ту букву, которая встречается в слове наибольшее количество раз
     * с указанием числа вхождений; если несколько букв имеют одинаковое количество вхождений,
     * то возвращает ту, которая встречается в слове последней.
     * В случае пустой строки возвращает символ '\0' и количество вхождений 0.
     * @param word анализируемое слово
     * @return результат анализа
     */
    public static MaxLetterInfo analyze(String word) {
        // массив для хранения счётчиков для букв английского алфавита в нижнем регистре
        int[] lowerCaseLetters = new int[('z' - 'a') + 1];

        // массив для хранения счётчиков для букв английского алфавита в верхнем регистре
        int[] upperCaseLetters = new int[('Z' - 'A') + 1];

        MaxLetterInfo maxLetterInfo = new MaxLetterInfo();

        // Проходим строку с начала до конца
        for (int i = 0; i < word.length(); i++) {
            // текущий анализируемый символ
            char c = word.charAt(i);

            // массив счётчиков с которым будем работать
            int[] letters = null;

            // индекс буквы в массиве счётчиков
            int letterIndex = -1;

            // если анализируемый символ является буквой английского алфавита в нижнем регистре
            if ('a' <= c && c <= 'z') {
                // то выбираем массив для хранения счётчиков для букв английского алфавита в нижнем регистре
                letters = lowerCaseLetters;

                // вычисляем индекс используя код символа
                letterIndex = c - 'a';
            }

            // если анализируемый символ является буквой английского алфавита в верхнем регистре
            if ('A' <= c && c <= 'Z') {
                letters = upperCaseLetters;

                // вычисляем индекс используя код символа
                letterIndex = c - 'A';
            }

            // если массив для счётчиков выбран (то значит анализируется буква английского алфавита)
            if (letters != null) {
                // увеличиваем значение счётчика для анализируемого символа на единицу
                letters[letterIndex] = letters[letterIndex] + 1;

                int letterCount = letters[letterIndex];

                // если увеличенное значение счётчика стало больше текущего максимума
                if (letterCount >= maxLetterInfo.getCount()) {
                    // то запоминаем анализируемый символ как наиболе часто встречающийся
                    maxLetterInfo.setLetter(c);

                    // и запоминаем сколько раз он встречался
                    maxLetterInfo.setCount(letterCount);
                }
            }
        }

        return maxLetterInfo;
    }
}